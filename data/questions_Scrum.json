{
  "meta": {
    "title": "Scrum",
    "target_audience": "Fortgeschrittene im BWL-Studium",
    "question_count": 30,
    "difficulty_profile": {
      "leicht": 5,
      "mittel": 20,
      "schwer": 5
    },
    "time_per_weight_minutes": {
      "1": 0.5,
      "2": 0.75,
      "3": 1.0
    },
    "additional_buffer_minutes": 5,
    "test_duration_minutes": 30
  },
  "questions": [
    {
      "frage": "1. Was ist die Hauptverantwortung des Product Owners in einem agilen BWL-Projekt, wie zum Beispiel der Entwicklung einer neuen Marketingstrategie?",
      "optionen": [
        "Die tägliche Arbeit des Projektteams zu organisieren und zu überwachen.",
        "Den Geschäftswert des Produkts durch Priorisierung der Anforderungen zu maximieren.",
        "Die Einhaltung der Scrum-Regeln im Team sicherzustellen und Meetings zu moderieren.",
        "Die technische Umsetzung der Marketingkampagne zu verantworten.",
        "Das Projektbudget zu kontrollieren und dem Management Bericht zu erstatten."
      ],
      "loesung": 1,
      "erklaerung": "Der Product Owner ist dafür verantwortlich, den Produkterfolg und damit den Geschäftswert zu maximieren. Dies geschieht durch die strategische Priorisierung der Einträge im Product Backlog, wie z.B. einzelne Maßnahmen der Marketingstrategie.",
      "gewichtung": 1,
      "thema": "Scrum-Rollen",
      "mini_glossary": {
        "Product Owner": "Die Scrum-Rolle, die für die Maximierung des Werts des Produkts verantwortlich ist, das aus der Arbeit des Entwicklungsteams resultiert.",
        "Product Backlog": "Eine geordnete Liste von allem, was für das Produkt bekannt ist und benötigt wird. Es ist die einzige Quelle für Anforderungen an jegliche Änderungen am Produkt.",
        "Geschäftswert": "Der Nutzen, den ein Unternehmen aus einem Produkt oder einer Dienstleistung zieht, oft gemessen in ROI, Kundenzufriedenheit oder Marktanteil."
      }
    },
    {
      "frage": "2. Welche Aussage beschreibt das Highlander-Prinzip in Bezug auf die Rolle des Product Owners korrekt?",
      "optionen": [
        "Der Product Owner muss der ranghöchste Manager im Projekt sein.",
        "Es kann in einem Projekt mehrere Product Owner geben, die sich die Verantwortung teilen.",
        "Die Rolle des Product Owners kann durch ein Komitee ausgeübt werden, um alle Stakeholder-Interessen abzubilden.",
        "Es kann immer nur **genau eine Person** die Rolle des Product Owners geben, um schnelle und klare Entscheidungen zu gewährleisten.",
        "Der Product Owner wechselt nach jedem Sprint, um neue Perspektiven einzubringen."
      ],
      "loesung": 3,
      "erklaerung": "Das Highlander-Prinzip besagt: 'Es kann nur einen geben'. Die Rolle des Product Owners darf nicht geteilt oder von einem Komitee wahrgenommen werden. Dies stellt sicher, dass es eine einzige, klare Stimme für das Produkt gibt und Entscheidungen schnell getroffen werden können.",
      "gewichtung": 1,
      "thema": "Scrum-Rollen",
      "mini_glossary": {
        "Highlander-Prinzip": "Ein informeller Grundsatz in Scrum, der besagt, dass es für ein Produkt nur einen einzigen Product Owner geben kann, um unklare Zuständigkeiten und Verzögerungen zu vermeiden.",
        "Komitee": "Eine Gruppe von Personen, die gemeinsam Entscheidungen trifft. In Scrum wird dies für die Product-Owner-Rolle explizit vermieden.",
        "Stakeholder": "Jede Person oder Gruppe, die ein Interesse am Produkt hat, wie z.B. Kunden, Anwender, Management oder Sponsoren."
      }
    },
    {
      "frage": "3. Was ist das Ergebnis eines Sprints?",
      "optionen": [
        "Ein umfassender Statusbericht für das Management.",
        "Ein Plan für den nächsten Sprint.",
        "Ein potenziell auslieferbares Produktinkrement.",
        "Eine Liste aller erledigten Aufgaben.",
        "Die Genehmigung des Budgets für die nächste Projektphase."
      ],
      "loesung": 2,
      "erklaerung": "Das Ziel jedes Sprints ist die Erstellung eines 'Done', nutzbaren und potenziell auslieferbaren Produktinkrements. Dieses Inkrement muss produktreif sein, auch wenn der Product Owner entscheidet, es nicht sofort auszuliefern.",
      "gewichtung": 1,
      "thema": "Scrum-Artefakte",
      "mini_glossary": {
        "Sprint": "Eine Iteration von maximal vier Wochen, in der ein 'Done', nutzbares und potenziell auslieferbares Produktinkrement erstellt wird.",
        "Produktinkrement": "Die Summe aller Product-Backlog-Einträge, die während eines Sprints und aller vorherigen Sprints fertiggestellt wurden. Am Ende eines Sprints muss das neue Inkrement 'Done' sein.",
        "Definition of Done": "Ein gemeinsames Verständnis des Teams darüber, was es bedeutet, dass Arbeit als fertiggestellt gilt, um Transparenz und Qualität zu gewährleisten."
      }
    },
    {
      "frage": "4. Wie groß sollte ein Entwicklungsteam in Scrum idealerweise sein?",
      "optionen": [
        "Genau 10 Mitglieder, um maximale Kapazität zu haben.",
        "Weniger als 3 Mitglieder, um die Kommunikation einfach zu halten.",
        "Zwischen 3 und 9 Mitgliedern.",
        "Mehr als 12 Mitglieder, um viele Aufgaben parallel bearbeiten zu können.",
        "Die Größe ist irrelevant, solange alle Aufgaben erledigt werden."
      ],
      "loesung": 2,
      "erklaerung": "Ein Entwicklungsteam in Scrum sollte aus 3 bis 9 Mitgliedern bestehen. Diese Größe ist klein genug, um agil zu bleiben und eine schnelle Kommunikation zu ermöglichen, aber groß genug, um innerhalb eines Sprints signifikante Arbeit zu leisten.",
      "gewichtung": 1,
      "thema": "Scrum-Rollen",
      "mini_glossary": {
        "Entwicklungsteam": "Eine Gruppe von Fachleuten, die am Ende jedes Sprints ein potenziell auslieferbares Inkrement des 'Done'-Produkts liefern. Es organisiert sich selbst und ist cross-funktional.",
        "Cross-funktional": "Das Team besitzt alle Fähigkeiten, die notwendig sind, um Produktinkremente zu erstellen, z.B. Marktanalyse, Design, Controlling, ohne auf externe Hilfe angewiesen zu sein.",
        "Selbstorganisation": "Das Team entscheidet selbst, wie es seine Arbeit am besten erledigt, anstatt von außen gesteuert zu werden."
      }
    },
    {
      "frage": "5. Welchem Zweck dient das Daily Scrum Meeting?",
      "optionen": [
        "Dem Product Owner einen detaillierten Statusbericht zu geben.",
        "Probleme zu lösen und technische Details zu diskutieren.",
        "Neue Aufgaben für den Sprint festzulegen.",
        "Der täglichen Abstimmung des Entwicklungsteams über den Arbeitsfortschritt und die Planung für die nächsten 24 Stunden.",
        "Die Leistung einzelner Teammitglieder zu bewerten."
      ],
      "loesung": 3,
      "erklaerung": "Das Daily Scrum ist ein 15-minütiges Meeting für das Entwicklungsteam, um die Arbeit seit dem letzten Treffen zu synchronisieren und einen Plan für die nächsten 24 Stunden zu erstellen. Es dient der Einsatzplanung und der Identifikation von Hindernissen.",
      "gewichtung": 1,
      "thema": "Scrum-Meetings",
      "mini_glossary": {
        "Daily Scrum": "Ein tägliches 15-minütiges Meeting für das Entwicklungsteam zur Synchronisierung der Aktivitäten und zur Erstellung eines Plans für die nächsten 24 Stunden.",
        "Hindernis (Impediment)": "Alles, was das Team daran hindert, seine Arbeit zu erledigen oder es verlangsamt.",
        "Time-box": "Eine feste Zeitdauer für ein Meeting oder ein Event, die nicht überschritten werden darf. Das Daily Scrum hat eine Time-box von 15 Minuten."
      }
    },
    {
      "frage": "6. Ein Projektteam in einer Unternehmensberatung nutzt Scrum, um ein neues Beratungskonzept für einen Kunden zu entwickeln. Im Sprint Planning stellt das Team fest, dass die vom Product Owner gewünschten Analysen zu umfangreich für einen Sprint sind. Was ist laut Pull-Prinzip die korrekte Vorgehensweise des Entwicklungsteams?",
      "optionen": [
        "Das Team muss alle gewünschten Analysen akzeptieren, da der Product Owner die Prioritäten vorgibt.",
        "Der Scrum Master entscheidet, welche Analysen durchgeführt werden.",
        "Das Team nimmt so viele Analysen in den Sprint auf, wie es realistisch glaubt, schaffen zu können, und erstellt dafür eine Vorhersage (Forecast).",
        "Das Team bittet den Product Owner, den Sprint zu verlängern, um alle Anforderungen zu erfüllen.",
        "Das Team lehnt alle Analysen ab und wartet auf kleinere Aufgabenpakete."
      ],
      "loesung": 2,
      "erklaerung": "Das Entwicklungsteam wendet das Pull-Prinzip an, d.h., es 'zieht' sich die Arbeit aus dem Product Backlog in den Sprint. Es bestimmt selbst, wie viel Arbeit es aufnehmen kann, und macht eine Vorhersage (Forecast) darüber, was es im Sprint schaffen kann. Es ist nicht verpflichtet, mehr Arbeit zu akzeptieren, als es für machbar hält.",
      "gewichtung": 2,
      "thema": "Scrum-Prozess",
      "extended_explanation": {
        "titel": "Das Pull-Prinzip im Kontext von Business-Projekten",
        "schritte": [
          "Im Gegensatz zu traditionellen Push-Systemen, bei denen die Arbeit vom Management an das Team 'gedrückt' wird, fördert das Pull-Prinzip die Eigenverantwortung und Selbstorganisation des Teams.",
          "Für das Beratungsprojekt bedeutet dies, dass das Team nicht fremdgesteuert wird, sondern basierend auf seiner Erfahrung und Kapazität eine realistische Zusage für den Sprint trifft.",
          "Dies führt zu nachhaltigerem Arbeitstempo und qualitativ hochwertigeren Ergebnissen, da das Team nicht überlastet wird und sich auf die versprochenen Lieferobjekte konzentrieren kann."
        ]
      },
      "mini_glossary": {
        "Pull-Prinzip": "Ein Vorgehen, bei dem das Entwicklungsteam die Arbeit aus dem Product Backlog aktiv in den Sprint 'zieht', anstatt sie zugewiesen zu bekommen.",
        "Forecast (Vorhersage)": "Die Einschätzung des Entwicklungsteams, welche Funktionalität innerhalb eines Sprints geliefert werden kann. Es ist keine Garantie, sondern eine Prognose.",
        "Sprint Planning": "Das Scrum-Meeting, in dem die Arbeit für den kommenden Sprint geplant wird. Das Ergebnis ist das Sprint Backlog."
      }
    },
    {
      "frage": "7. Welche Aussage trifft **nicht** auf das Product Backlog zu?",
      "optionen": [
        "Es ist eine dynamische Liste, die sich ständig weiterentwickelt.",
        "Die Einträge werden vom Entwicklungsteam nach technischer Machbarkeit priorisiert.",
        "Hoch priorisierte Einträge sind detaillierter ausgearbeitet als niedrig priorisierte.",
        "Es enthält alle bekannten Anforderungen und Features für das Produkt.",
        "Es ist transparent für alle Stakeholder und das Entwicklungsteam."
      ],
      "loesung": 1,
      "erklaerung": "Die Priorisierung bzw. Ordnung des Product Backlogs ist eine der Kernaufgaben des Product Owners. Er ordnet die Einträge nach Geschäftswert, Risiko und Dringlichkeit, um den Produkterfolg zu maximieren. Das Entwicklungsteam ist für die Schätzung des Aufwands verantwortlich, nicht für die Priorisierung.",
      "gewichtung": 2,
      "thema": "Scrum-Artefakte",
      "extended_explanation": {
        "titel": "Trennung von Verantwortung: 'Was' vs. 'Wie viel' vs. 'Wie'",
        "schritte": [
          "In Scrum gibt es eine klare Gewaltenteilung: Der Product Owner entscheidet über das **'Was'** (welche Features) und in welcher Reihenfolge (Priorisierung).",
          "Das Entwicklungsteam entscheidet über das **'Wie viel'** (wie viel Arbeit es in einen Sprint aufnimmt) und das **'Wie'** (wie es die Arbeit technisch oder fachlich umsetzt).",
          "Diese Trennung stellt sicher, dass Geschäftsinteressen (durch den PO) und die Umsetzungskapazität (durch das Team) ausgewogen sind, was für den Projekterfolg entscheidend ist."
        ]
      },
      "mini_glossary": {
        "Priorisierung": "Der Prozess des Ordnens von Elementen (z.B. im Product Backlog) nach ihrer Wichtigkeit, um den maximalen Wert zu liefern. Dies ist die Aufgabe des Product Owners.",
        "Schätzung": "Der Prozess der Bewertung des Aufwands, der zur Fertigstellung eines Product-Backlog-Eintrags erforderlich ist. Dies ist die Aufgabe des Entwicklungsteams.",
        "User Story": "Ein gängiges Format für Product-Backlog-Einträge, das eine Anforderung aus der Perspektive eines Endbenutzers beschreibt."
      }
    },
    {
      "frage": "8. Ein agiles Team, das eine neue Online-Banking-App entwickelt, präsentiert im Sprint-Review eine neue Überweisungsfunktion. Der wichtigste Zweck dieses Meetings ist es...",
      "optionen": [
        "...die formale Abnahme des Inkrements durch das Management zu erhalten.",
        "...den Fortschritt des Teams anhand der erledigten Aufgaben zu messen.",
        "...Feedback von Stakeholdern (z.B. Kunden, Fachabteilungen) zum Produktinkrement einzuholen, um das Product Backlog anzupassen.",
        "...die Zusammenarbeit innerhalb des Teams für den nächsten Sprint zu planen.",
        "...den Scrum Master über den aktuellen Entwicklungsstand zu informieren."
      ],
      "loesung": 2,
      "erklaerung": "Der zentrale Zweck des Sprint-Reviews ist die Inspektion des Produktinkrements und die Anpassung des Product Backlogs. Das Entwicklungsteam demonstriert die Arbeit, und die Stakeholder geben Feedback, welches der Product Owner zur Optimierung des Produkts nutzt.",
      "gewichtung": 2,
      "thema": "Scrum-Meetings",
      "extended_explanation": {
        "titel": "Der Sprint-Review als Wertschöpfungs-Feedbackschleife",
        "schritte": [
          "Im agilen Kontext ist es entscheidend, schnell zu lernen, ob das entwickelte Produkt den Markt- bzw. Kundenanforderungen entspricht.",
          "Der Sprint-Review ist die formale Gelegenheit, Annahmen zu validieren. Anstatt monatelang an einem Konzept zu arbeiten, das vielleicht am Markt vorbei entwickelt wird, erhält das Team alle paar Wochen direktes Feedback.",
          "Für die Banking-App könnte dieses Feedback z.B. lauten: 'Die Funktion ist gut, aber eine Vorlagenfunktion für wiederkehrende Überweisungen wäre noch wertvoller.' Dieser Input fließt direkt in die weitere Planung ein."
        ]
      },
      "mini_glossary": {
        "Sprint-Review": "Ein informelles Meeting am Ende des Sprints, um das Inkrement zu inspizieren und das Product Backlog bei Bedarf anzupassen.",
        "Feedbackschleife": "Ein Prozess, bei dem die Ergebnisse einer Aktion erfasst und zur Änderung zukünftiger Aktionen verwendet werden. Der Sprint-Review ist eine zentrale Feedbackschleife in Scrum.",
        "Inspektion & Anpassung (Inspect & Adapt)": "Ein empirischer Grundpfeiler von Scrum. Regelmäßige Inspektion von Artefakten und Fortschritt ermöglicht Anpassungen, um Abweichungen zu minimieren."
      }
    },
    {
      "frage": "9. Was ist die Rolle des Scrum Masters während des Daily Scrums?",
      "optionen": [
        "Er leitet das Meeting und weist den Teammitgliedern Aufgaben zu.",
        "Er sammelt die Status-Updates für seinen Bericht an das Management.",
        "Er sorgt dafür, dass das Meeting stattfindet, die Time-box eingehalten wird und coacht das Team, das Meeting selbst produktiv zu gestalten.",
        "Er löst die von den Entwicklern genannten fachlichen Probleme direkt im Meeting.",
        "Er ist ein optionaler Teilnehmer und muss nicht anwesend sein."
      ],
      "loesung": 2,
      "erklaerung": "Der Scrum Master agiert als Coach und Moderator. Er stellt sicher, dass das Daily Scrum stattfindet und effektiv ist, leitet es aber nicht im Sinne einer traditionellen Führungskraft. Seine Hauptaufgabe ist es, dem Team zu helfen, das Meeting selbstständig und erfolgreich durchzuführen und gemeldete Hindernisse aufzunehmen.",
      "gewichtung": 2,
      "thema": "Scrum-Rollen",
      "extended_explanation": {
        "titel": "Der Scrum Master als 'Servant Leader'",
        "schritte": [
          "Das Konzept des 'Servant Leader' (dienende Führungskraft) ist zentral für die Rolle des Scrum Masters. Er führt nicht durch Anweisung, sondern indem er dem Team dient und Hindernisse aus dem Weg räumt.",
          "Im Daily Scrum bedeutet dies, dass er das Team befähigt, sich selbst zu organisieren. Er fragt nicht 'Was habt ihr für mich getan?', sondern 'Wie kann ich euch helfen, euer Sprint-Ziel zu erreichen?'.",
          "Er schützt das Team auch vor externen Störungen während dieses wichtigen Synchronisations-Meetings."
        ]
      },
      "mini_glossary": {
        "Scrum Master": "Die Scrum-Rolle, die dafür verantwortlich ist, Scrum zu fördern und zu unterstützen. Er hilft allen Beteiligten, die Scrum-Theorie, -Praktiken, -Regeln und -Werte zu verstehen.",
        "Servant Leader": "Ein Führungsstil, bei dem die Führungskraft sich darauf konzentriert, die Bedürfnisse des Teams zu erfüllen und ihm zu ermöglichen, sein volles Potenzial zu entfalten.",
        "Coaching": "Ein Prozess, bei dem der Scrum Master dem Team und der Organisation hilft, ihre agilen Praktiken und Denkweisen zu verbessern."
      }
    },
    {
      "frage": "10. In einer Sprint-Retrospektive stellt ein Team, das an der Optimierung eines internen Controlling-Prozesses arbeitet, fest, dass die Kommunikation mit der Finanzabteilung oft zu Verzögerungen führt. Was ist das primäre Ziel dieser Retrospektive?",
      "optionen": [
        "Die Schuldigen für die schlechte Kommunikation zu identifizieren und zu benennen.",
        "Das Produktinkrement der Finanzabteilung vorzustellen.",
        "Den Product Owner über die Probleme zu informieren, damit er sie löst.",
        "Konkrete Verbesserungsmaßnahmen für den nächsten Sprint zu definieren, um die Zusammenarbeit zu verbessern.",
        "Den Arbeitsfortschritt des letzten Sprints zu dokumentieren."
      ],
      "loesung": 3,
      "erklaerung": "Die Sprint-Retrospektive ist ein Meeting zur Prozessverbesserung. Das Scrum-Team (Entwicklungsteam und Product Owner) reflektiert über den letzten Sprint und identifiziert, was gut lief und was verbessert werden kann. Das Ziel ist es, konkrete, umsetzbare Maßnahmen für den nächsten Sprint zu vereinbaren.",
      "gewichtung": 2,
      "thema": "Scrum-Meetings",
      "extended_explanation": {
        "titel": "Die Retrospektive als Motor der kontinuierlichen Verbesserung",
        "schritte": [
          "Scrum basiert auf der Idee, dass sich Prozesse ständig verbessern lassen ('Kaizen'). Die Retrospektive ist das formale Event, das diesen Verbesserungsprozess antreibt.",
          "Anstatt Probleme zu ignorieren, werden sie offen angesprochen und das Team verpflichtet sich selbst zu Experimenten zur Verbesserung. Für das Controlling-Team könnte eine Maßnahme sein: 'Wir laden im nächsten Sprint einen Vertreter der Finanzabteilung zu unserem Daily Scrum ein, um die Abstimmung zu beschleunigen.'",
          "Der Fokus liegt immer auf umsetzbaren Schritten, nicht auf Schuldzuweisungen."
        ]
      },
      "mini_glossary": {
        "Sprint-Retrospektive": "Eine Gelegenheit für das Scrum-Team, sich selbst zu inspizieren und einen Plan für Verbesserungen zu erstellen, die im nächsten Sprint umgesetzt werden sollen.",
        "Kontinuierliche Verbesserung (Kaizen)": "Ein aus dem Japanischen stammendes Managementkonzept, das eine schrittweise, aber stetige Perfektionierung von Produkten oder Prozessen anstrebt.",
        "Verbesserungsmaßnahme": "Ein konkreter, umsetzbarer Schritt, den das Team im nächsten Sprint ausprobieren wird, um ein identifiziertes Problem zu lösen oder einen Prozess zu optimieren."
      }
    },
    {
      "frage": "11. Was unterscheidet User Stories von klassischen Anforderungen in einem Lastenheft für ein BWL-Projekt?",
      "optionen": [
        "User Stories sind technisch detaillierter als klassische Anforderungen.",
        "User Stories müssen von Anfang an vollständig und widerspruchsfrei sein.",
        "Der Fokus von User Stories liegt auf der Erzeugung eines gemeinsamen Verständnisses bei allen Beteiligten, nicht auf vollständiger Spezifikation.",
        "User Stories werden ausschließlich vom Management geschrieben und vorgegeben.",
        "Klassische Anforderungen sind flexibler als User Stories."
      ],
      "loesung": 2,
      "erklaerung": "Der wesentliche Unterschied liegt im Fokus: Klassische Anforderungen zielen auf Vollständigkeit und Korrektheit der Spezifikation ab. User Stories hingegen sind 'Platzhalter für eine Konversation'. Ihr Ziel ist es, ein gemeinsames Verständnis zwischen dem Product Owner, dem Entwicklungsteam und den Stakeholdern über den Nutzen einer Funktion zu schaffen.",
      "gewichtung": 2,
      "thema": "Scrum-Artefakte",
      "extended_explanation": {
        "titel": "Von der Spezifikation zur Kommunikation",
        "schritte": [
          "Ein klassisches Lastenheft versucht, alle Eventualitäten im Voraus zu definieren, was in komplexen Projekten oft zu Fehlannahmen und starren Plänen führt.",
          "Eine User Story, z.B. 'Als Online-Shop-Betreiber möchte ich einen Monatsumsatz-Report sehen, um meine Topseller zu identifizieren', beschreibt das **Warum** und **Was** aus Nutzersicht.",
          "Die Details des **Wie** (z.B. welche Kennzahlen genau, welches Diagrammformat) werden dann in der direkten Kommunikation zwischen Product Owner und Team geklärt, kurz bevor die Story umgesetzt wird. Dies ermöglicht viel mehr Flexibilität und stellt sicher, dass das Ergebnis den tatsächlichen Bedarf trifft."
        ]
      },
      "mini_glossary": {
        "User Story": "Eine informelle, allgemeine Erklärung einer Softwarefunktion, die aus der Perspektive des Endbenutzers oder Kunden geschrieben wird.",
        "Gemeinsames Verständnis": "Ein zentrales Ziel der agilen Anforderungserhebung, bei dem es wichtiger ist, dass alle Beteiligten die gleiche Vorstellung vom Ziel haben, als eine perfekte schriftliche Spezifikation zu besitzen.",
        "Lastenheft": "Ein Dokument in klassischen Projektmanagement-Methoden, das die Gesamtheit der Anforderungen des Auftraggebers an die Lieferungen und Leistungen eines Auftragnehmers beschreibt."
      }
    },
    {
      "frage": "12. Welches der folgenden Prinzipien des Agilen Manifests steht im direkten Kontrast zur strikten Einhaltung eines zu Beginn des Projekts erstellten, detaillierten Projektplans?",
      "optionen": [
        "Individuen und Interaktionen sind wichtiger als Prozesse und Tools",
        "Laufende Software ist wichtiger als ausführliche Dokumentation",
        "Zusammenarbeit mit dem Kunden ist wichtiger als Vertragsverhandlungen",
        "Reagieren auf Veränderungen ist wichtiger als Planbefolgung",
        "Funktionierende Software ist das wichtigste Fortschrittsmaß"
      ],
      "loesung": 3,
      "erklaerung": "Das Prinzip 'Reagieren auf Veränderungen ist wichtiger als Planbefolgung' betont die Notwendigkeit von Flexibilität. Während ein Plan nützlich ist, erkennt Agilität an, dass in komplexen Umgebungen Veränderungen unvermeidlich und sogar willkommen sind, um einen Wettbewerbsvorteil zu erzielen.",
      "gewichtung": 2,
      "thema": "Agile Prinzipien",
      "extended_explanation": {
        "titel": "Plan vs. Realität in dynamischen Märkten",
        "schritte": [
          "In der BWL, insbesondere im Marketing oder der Produktentwicklung, ändern sich Marktbedingungen, Kundenwünsche oder Wettbewerbsstrategien schnell.",
          "Ein starrer Plan, der vor sechs Monaten erstellt wurde, ist oft veraltet. Statt sich an diesen Plan zu klammern, ermöglichen agile Methoden wie Scrum eine kontinuierliche Anpassung der Strategie.",
          "Das bedeutet nicht, dass es keine Planung gibt. Es gibt eine Vision und ein Backlog, aber der detaillierte Plan wird iterativ erstellt und angepasst, was eine viel höhere Erfolgswahrscheinlichkeit in dynamischen Märkten bietet."
        ]
      },
      "mini_glossary": {
        "Agiles Manifest": "Ein Dokument aus dem Jahr 2001, das die zentralen Werte und Prinzipien der agilen Softwareentwicklung definiert und die Grundlage für Frameworks wie Scrum bildet.",
        "Planbefolgung": "Das strikte Festhalten an einem vordefinierten Projektplan, typisch für klassische Wasserfallmodelle.",
        "Komplexität": "Ein Zustand, in dem die Beziehung zwischen Ursache und Wirkung nicht im Voraus bekannt ist. In komplexen Umgebungen sind empirische Prozesse wie Scrum effektiver als vordefinierte Pläne."
      }
    },
    {
      "frage": "13. Ein Entwicklungsteam hat im Sprint Planning vier User Stories für die Erstellung eines Finanzreports in den Sprint aufgenommen. Was ist das Sprint Backlog?",
      "optionen": [
        "Nur die Liste dieser vier User Stories.",
        "Die vier User Stories plus der detaillierte Plan des Teams für deren Umsetzung (z.B. in Form von Tasks).",
        "Das gesamte Product Backlog, aus dem die vier Stories stammen.",
        "Der vom Scrum Master genehmigte Arbeitsplan für das Team.",
        "Ein Diagramm, das den verbleibenden Arbeitsaufwand im Sprint anzeigt."
      ],
      "loesung": 1,
      "erklaerung": "Das Sprint Backlog besteht aus den für den Sprint ausgewählten Product-Backlog-Einträgen (den User Stories) und dem Plan für deren Umsetzung. Es ist der Plan des Entwicklungsteams, wie es das Produktinkrement erstellen und das Sprint-Ziel erreichen wird.",
      "gewichtung": 2,
      "thema": "Scrum-Artefakte",
      "extended_explanation": {
        "titel": "Sprint Backlog: Der Plan des Teams",
        "schritte": [
          "Das Sprint Backlog ist Eigentum des Entwicklungsteams. Niemand, auch nicht der Scrum Master oder Product Owner, kann es nach dem Sprint Planning ändern.",
          "Es dient dem Team zur täglichen Organisation. Oft wird es als Taskboard visualisiert, auf dem der Fortschritt der einzelnen Aufgaben (Tasks) verfolgt wird (z.B. 'ToDo', 'Doing', 'Done').",
          "Diese Transparenz hilft dem Team, den Überblick zu behalten, Engpässe zu erkennen und sich selbst zu organisieren, um das Sprint-Ziel zu erreichen."
        ]
      },
      "mini_glossary": {
        "Sprint Backlog": "Die Menge der Product-Backlog-Einträge, die für den Sprint ausgewählt wurden, plus ein Plan für die Lieferung des Produktinkrements und die Realisierung des Sprint-Ziels.",
        "Taskboard": "Ein Werkzeug zur Visualisierung der Arbeit im Sprint, typischerweise mit Spalten wie 'User Story', 'ToDo', 'Doing' und 'Done'.",
        "Task": "Eine kleinere Arbeitseinheit, die notwendig ist, um eine User Story fertigzustellen. Das Zerlegen von Stories in Tasks (Task-Breakdown) ist Teil des Sprint Plannings."
      }
    },
    {
      "frage": "14. Was ist eine der wichtigsten Aufgaben eines Scrum Masters in Bezug auf Hindernisse (Impediments), die im Daily Scrum identifiziert werden?",
      "optionen": [
        "Er dokumentiert die Hindernisse und eskaliert sie immer sofort an das Top-Management.",
        "Er weist die Lösung der Hindernisse einzelnen Teammitgliedern zu.",
        "Er kümmert sich um die Beseitigung der Hindernisse, was oft die Interaktion mit anderen Abteilungen oder die Beschaffung von Ressourcen erfordert.",
        "Er priorisiert die Hindernisse und entscheidet, welche ignoriert werden können.",
        "Er wartet bis zur Sprint-Retrospektive, um über die Hindernisse zu sprechen."
      ],
      "loesung": 2,
      "erklaerung": "Der Scrum Master ist dafür verantwortlich, sich um die Beseitigung der vom Team identifizierten Hindernisse zu kümmern. Das bedeutet nicht immer, dass er sie selbst löst, aber er sorgt dafür, dass sie gelöst werden. Dies kann die Zusammenarbeit mit anderen Teilen der Organisation erfordern, um z.B. Abhängigkeiten aufzulösen oder Ressourcen zu beschaffen.",
      "gewichtung": 2,
      "thema": "Scrum-Rollen",
      "extended_explanation": {
        "titel": "Hindernisbeseitigung als Schutzschild des Teams",
        "schritte": [
          "Eine zentrale Funktion des Scrum Masters ist es, das Team vor Störungen und Blockaden zu schützen, damit es sich auf die Erreichung des Sprint-Ziels konzentrieren kann.",
          "Ein Hindernis in einem BWL-Projekt könnte sein: 'Wir warten auf eine rechtliche Freigabe für einen Marketing-Text.' Der Scrum Master würde nicht warten, sondern proaktiv den Kontakt zur Rechtsabteilung suchen, um den Prozess zu beschleunigen.",
          "Durch diese proaktive Problemlösung erhält der Scrum Master die Produktivität und den Flow des Teams aufrecht."
        ]
      },
      "mini_glossary": {
        "Hindernis (Impediment)": "Alles, was die Arbeit des Teams an seinen Aufgaben blockiert oder verlangsamt.",
        "Beseitigung von Hindernissen": "Eine Kernaufgabe des Scrum Masters, die dazu dient, die Produktivität des Teams sicherzustellen.",
        "Flow": "Ein Zustand, in dem ein Team kontinuierlich und ohne Unterbrechungen Wert liefern kann."
      }
    },
    {
      "frage": "15. Welche der folgenden Aussagen beschreibt das Konzept eines cross-funktionalen Teams im Kontext eines Projekts zur Einführung eines neuen CRM-Systems am besten?",
      "optionen": [
        "Alle Teammitglieder müssen jede Aufgabe im Projekt erledigen können, von der IT-Anbindung bis zur Anwenderschulung.",
        "Das Team besteht ausschließlich aus Spezialisten einer einzigen Disziplin, z.B. nur Vertriebsexperten.",
        "Das Team besitzt **als Ganzes** alle notwendigen Fähigkeiten (z.B. IT, Vertrieb, Marketing, Schulung), um das CRM-System ohne ständige Abhängigkeit von externen Abteilungen einzuführen.",
        "Jeder Experte arbeitet nur an den Aufgaben seines Fachgebiets und übergibt das Ergebnis dann an den nächsten.",
        "Der Scrum Master muss ein Experte in allen erforderlichen Disziplinen sein, um das Team anzuleiten."
      ],
      "loesung": 2,
      "erklaerung": "Ein cross-funktionales Team besitzt alle Fähigkeiten, die notwendig sind, um ein fertiges Produktinkrement zu erstellen. Das bedeutet nicht, dass jeder alles kann, sondern dass im Team alle Kompetenzen vorhanden sind – von der Konzeption (z.B. durch Vertriebsexperten) bis zur Umsetzung und Qualitätssicherung.",
      "gewichtung": 2,
      "thema": "Scrum-Rollen",
      "extended_explanation": {
        "titel": "Vorteile der Cross-Funktionalität",
        "schritte": [
          "Traditionelle Projekte leiden oft unter langen Wartezeiten durch Übergaben zwischen verschiedenen Abteilungen (Silos).",
          "Ein cross-funktionales Team eliminiert diese Abhängigkeiten weitgehend. Wenn eine Frage zum Vertriebsprozess auftaucht, ist der Experte direkt im Team und die Antwort erfolgt sofort, nicht nach drei Tagen per E-Mail.",
          "Dies erhöht die Geschwindigkeit, Flexibilität und die Qualität des Ergebnisses, da alle Perspektiven von Anfang an in die Lösungsfindung einfließen."
        ]
      },
      "mini_glossary": {
        "Cross-funktional": "Das Team verfügt über alle notwendigen Kompetenzen, um seine Arbeit abzuschließen, ohne von Personen außerhalb des Teams abhängig zu sein.",
        "Silo": "Eine Metapher für Abteilungen oder Gruppen in einer Organisation, die nur begrenzt mit anderen Gruppen kommunizieren oder zusammenarbeiten.",
        "Abhängigkeit (Dependency)": "Eine Situation, in der Team A nicht weiterarbeiten kann, bevor Team B eine bestimmte Aufgabe erledigt hat. Scrum-Teams versuchen, Abhängigkeiten zu minimieren."
      }
    },
    {
      "frage": "16. Warum ist das 'Backlog Refinement' (früher 'Grooming') ein wichtiges, wenn auch optionales Meeting in Scrum?",
      "optionen": [
        "Um den Fortschritt des aktuellen Sprints zu überprüfen und zu berichten.",
        "Um das Team für die im Sprint geleistete Arbeit zu belohnen.",
        "Um das Product Backlog für zukünftige Sprints vorzubereiten, indem Einträge geklärt, geschätzt und aufgeteilt werden.",
        "Um den finalen Release-Plan mit den Stakeholdern zu verabschieden.",
        "Um die Teammitglieder fachlich zu schulen."
      ],
      "loesung": 2,
      "erklaerung": "Das Backlog Refinement ist ein kontinuierlicher Prozess, um das Product Backlog sauber und aktuell zu halten. In diesem Workshop arbeiten Product Owner und Entwicklungsteam zusammen, um hoch priorisierte Einträge für die nächsten Sprints vorzubereiten. Dazu gehört das Klären von Details, das Aufteilen großer Einträge (Epics) und das Schätzen des Aufwands.",
      "gewichtung": 2,
      "thema": "Scrum-Meetings",
      "extended_explanation": {
        "titel": "Effiziente Sprint Plannings durch gute Vorbereitung",
        "schritte": [
          "Ohne Refinement käme das Team ins Sprint Planning und würde zum ersten Mal mit unklaren oder zu großen Anforderungen konfrontiert. Das Planning wäre langwierig und ineffizient.",
          "Durch regelmäßiges Refinement stellt das Team sicher, dass die obersten Einträge im Backlog 'ready' sind, d.h. klein, klar und schätzbar genug, um sie direkt in einen Sprint aufnehmen zu können.",
          "Dies sorgt für einen reibungslosen und schnellen Start in den Sprint und eine höhere Planungssicherheit."
        ]
      },
      "mini_glossary": {
        "Backlog Refinement": "Die Aktivität in Scrum, bei der Product Owner und Entwicklungsteam die Einträge im Product Backlog detaillieren, schätzen und ordnen.",
        "Epic": "Eine große User Story, die in der Regel nicht in einem einzigen Sprint umgesetzt werden kann und daher im Refinement in kleinere Stories aufgeteilt werden muss.",
        "Definition of Ready (DoR)": "Eine teaminterne Vereinbarung, die beschreibt, welche Kriterien ein Product-Backlog-Eintrag erfüllen muss, bevor er in einen Sprint aufgenommen werden kann."
      }
    },
    {
      "frage": "17. 'Laufende Software ist wichtiger als ausführliche Dokumentation' ist ein Wert des Agilen Manifests. Wie lässt sich dieser Wert auf ein Nicht-IT-Projekt, z.B. die Erstellung eines Businessplans, übertragen?",
      "optionen": [
        "Es sollte überhaupt keine Dokumentation erstellt werden, nur das Endergebnis zählt.",
        "Ein erster, umsetzbarer Entwurf des Businessplans, der bereits Kernaspekte validiert, ist wertvoller als ein 100-seitiges, theoretisches Konzeptdokument.",
        "Die Dokumentation des Prozesses ist wichtiger als der Businessplan selbst.",
        "Nur der Finanzteil des Businessplans ist wichtig, der Rest ist nebensächlich.",
        "Die finale, perfekt ausformulierte Version des Businessplans muss von Anfang an das Ziel sein."
      ],
      "loesung": 1,
      "erklaerung": "Der Wert betont, dass das primäre Ziel die Schaffung eines funktionierenden, wertvollen Ergebnisses ist, nicht die Erstellung von Dokumentation darüber. Übertragen auf einen Businessplan bedeutet das: Ein schlankes, aber funktionierendes Modell (z.B. ein 'Minimum Viable Product' des Businessplans), mit dem man bereits zu potenziellen Investoren gehen kann, ist nützlicher als eine monatelange Arbeit an einem perfekten, aber ungetesteten Dokument.",
      "gewichtung": 2,
      "thema": "Agile Prinzipien",
      "extended_explanation": {
        "titel": "Der Wert von 'Working Prototypes' im Business-Kontext",
        "schritte": [
          "Dieser agile Wert kämpft gegen die 'Analyse-Paralyse', bei der Projekte in der Planungs- und Dokumentationsphase stecken bleiben.",
          "Im Business-Kontext könnte das 'laufende' Ergebnis ein Prototyp eines neuen Service, eine Test-Marketingkampagne oder eben ein validiertes Geschäftsmodell sein.",
          "Die notwendige Dokumentation wird immer noch erstellt, aber sie dient dem Produkt und entsteht oft parallel dazu, anstatt es im Voraus vollständig zu beschreiben."
        ]
      },
      "mini_glossary": {
        "Minimum Viable Product (MVP)": "Eine Version eines neuen Produkts, die es einem Team ermöglicht, mit dem geringsten Aufwand die maximale Menge an validiertem Wissen über Kunden zu sammeln.",
        "Prototyp": "Ein frühes Muster, Modell oder eine Freigabe eines Produkts, das gebaut wurde, um ein Konzept oder einen Prozess zu testen.",
        "Analyse-Paralyse": "Ein Zustand, bei dem das Überanalysieren oder Überdenken einer Situation dazu führen kann, dass niemals eine Entscheidung getroffen oder eine Aktion ausgeführt wird."
      }
    },
    {
      "frage": "18. Wodurch zeichnet sich das Entwicklungsteam in Scrum aus?",
      "optionen": [
        "Es gibt einen Teamleiter, der die Arbeit verteilt und die Verantwortung trägt.",
        "Es gibt keine herausgehobenen Rollen oder Hierarchien innerhalb des Teams; alle Mitglieder sind 'Entwickler'.",
        "Der Product Owner ist Mitglied des Entwicklungsteams und arbeitet an der Umsetzung mit.",
        "Das Team wird für jeden Sprint neu zusammengestellt, um Flexibilität zu gewährleisten.",
        "Der Scrum Master ist der Vorgesetzte des Entwicklungsteams."
      ],
      "loesung": 1,
      "erklaerung": "Ein wesentliches Merkmal des Entwicklungsteams ist, dass es sich selbst organisiert und keine formelle Hierarchie oder Sub-Rollen (wie Tester, Analyst etc.) besitzt. Alle Mitglieder sind gleichberechtigt und tragen als Team die Verantwortung für das Ergebnis.",
      "gewichtung": 2,
      "thema": "Scrum-Rollen",
      "extended_explanation": {
        "titel": "Kollektive Verantwortung statt Einzelkämpfertum",
        "schritte": [
          "Durch den Verzicht auf Hierarchien wird die kollektive Verantwortung ('Collective Ownership') für das Produktinkrement gefördert.",
          "Es geht nicht darum, dass eine Person ihre Aufgabe 'fertig' hat, sondern dass das Team sein gemeinsames Ziel erreicht.",
          "Dies fördert die Zusammenarbeit, den Wissensaustausch (z.B. durch Pair Programming) und die Flexibilität, da Teammitglieder sich gegenseitig unterstützen, anstatt nur ihre eigenen, eng definierten Aufgaben zu sehen."
        ]
      },
      "mini_glossary": {
        "Entwickler": "Jedes Mitglied des Entwicklungsteams, unabhängig von seiner spezifischen Fachkompetenz (z.B. BWL, Design, IT).",
        "Hierarchie": "Eine Rangordnung oder ein System von Über- und Unterordnung, das im Scrum-Entwicklungsteam explizit vermieden wird.",
        "Kollektive Verantwortung (Collective Ownership)": "Das Prinzip, dass das gesamte Team für die Qualität und den Erfolg des Produkts verantwortlich ist, nicht nur einzelne Spezialisten."
      }
    },
    {
      "frage": "19. Welches Scrum-Artefakt bietet die beste Transparenz über den verbleibenden Arbeitsaufwand in einem **Sprint**?",
      "optionen": [
        "Das Release-Burnup-Chart",
        "Das Product Backlog",
        "Die Liste der Verbesserungsmaßnahmen aus der Retrospektive",
        "Das Sprint-Burndown-Chart",
        "Der Projektplan"
      ],
      "loesung": 3,
      "erklaerung": "Das Sprint-Burndown-Chart ist ein optionales Artefakt, das speziell dafür entwickelt wurde, dem Entwicklungsteam eine Prognose über die Erreichung des Sprint-Ziels zu geben. Es visualisiert die verbleibende Arbeit im Sprint im Verhältnis zur verbleibenden Zeit und macht Abweichungen vom Plan frühzeitig sichtbar.",
      "gewichtung": 2,
      "thema": "Scrum-Artefakte",
      "extended_explanation": {
        "titel": "Frühwarnsystem für den Sprint",
        "schritte": [
          "Das Chart wird typischerweise täglich aktualisiert. Die vertikale Achse zeigt den gesamten verbleibenden Aufwand (z.B. in Stunden oder Anzahl der Tasks), die horizontale Achse die Tage des Sprints.",
          "Eine 'Ideallinie' zeigt den linearen 'Abbrand' der Arbeit an. Weicht die tatsächliche Kurve stark nach oben ab, ist dies ein Signal für das Team, im Daily Scrum darüber zu sprechen und Gegenmaßnahmen zu ergreifen.",
          "Es ist ein Werkzeug für das Team selbst, nicht primär ein Reporting-Tool für das Management."
        ]
      },
      "mini_glossary": {
        "Sprint-Burndown-Chart": "Eine grafische Darstellung der verbleibenden Arbeit im Verhältnis zur Zeit in einem Sprint.",
        "Release-Burnup-Chart": "Ein Diagramm, das den Fortschritt in einem gesamten Release anzeigt, nicht nur in einem einzelnen Sprint. Es zeigt den Gesamtumfang und die bereits erledigte Arbeit.",
        "Transparenz": "Einer der drei Pfeiler von Scrum. Wichtige Aspekte des Prozesses müssen für alle Verantwortlichen sichtbar sein."
      }
    },
    {
      "frage": "20. Ein Product Owner für eine E-Commerce-Plattform hat über 200 Ideen und Anforderungen im Product Backlog. Welches Vorgehen ist im Sinne von Scrum am sinnvollsten?",
      "optionen": [
        "Alle 200 Einträge im Detail ausarbeiten und vom Entwicklungsteam schätzen lassen, um einen vollständigen Plan zu haben.",
        "Nur die Einträge für die nächsten 1-3 Sprints detailliert ausarbeiten und schätzen lassen, während der Rest als grobe Ideen verbleibt.",
        "Das Entwicklungsteam entscheiden lassen, welche der 200 Ideen am interessantesten sind.",
        "Ein Komitee aus Stakeholdern gründen, das über die Priorisierung aller 200 Einträge abstimmt.",
        "Das Backlog verwerfen und mit einer kleineren Liste neu beginnen."
      ],
      "loesung": 1,
      "erklaerung": "Ein gutes Product Backlog ist so gepflegt, dass hoch priorisierte Einträge klein und detailliert sind, während niedrig priorisierte Einträge groß und nur grob skizziert bleiben dürfen. Es ist ineffizient, weit in der Zukunft liegende Anforderungen im Detail auszuarbeiten, da sie sich wahrscheinlich ändern werden. Der Fokus liegt auf der Vorbereitung der unmittelbar bevorstehenden Arbeit.",
      "gewichtung": 2,
      "thema": "Scrum-Artefakte",
      "extended_explanation": {
        "titel": "Progressive Detaillierung und Risikomanagement",
        "schritte": [
          "Dieses Vorgehen wird auch 'progressive Detaillierung' oder 'Rolling Wave Planning' genannt. Man plant im Detail, was man als Nächstes tut, und hält spätere Pläne auf einem höheren Abstraktionsniveau.",
          "Dies minimiert den Aufwand für Planung, die möglicherweise verschwendet wäre, weil sich die Prioritäten ändern.",
          "Gleichzeitig ist dies eine Form des Risikomanagements: Der Product Owner kann auf neue Marktchancen oder Kundenfeedback schnell reagieren, indem er das Backlog neu priorisiert, ohne einen riesigen, detaillierten Plan überarbeiten zu müssen."
        ]
      },
      "mini_glossary": {
        "DEEP": "Ein Akronym, das die Eigenschaften eines guten Product Backlogs beschreibt: Detailed appropriately (angemessen detailliert), Estimated (geschätzt), Emergent (sich entwickelnd) und Prioritized (priorisiert).",
        "Progressive Detaillierung": "Ein Planungsansatz, bei dem die Arbeit, die in naher Zukunft ausgeführt wird, detailliert geplant wird, während die Arbeit in der ferneren Zukunft auf einer höheren Ebene geplant wird.",
        "Risikomanagement": "Der Prozess der Identifizierung, Bewertung und Kontrolle von Bedrohungen für das Kapital und die Erträge einer Organisation. In Scrum geschieht dies oft durch Priorisierung und frühes Feedback."
      }
    },
    {
      "frage": "21. Welche der drei Scrum-Perspektiven wird primär durch die Sprint-Retrospektive und die Beseitigung von Hindernissen durch den Scrum Master verkörpert?",
      "optionen": [
        "Die Produktperspektive (Businessfokus)",
        "Die Entwicklungsperspektive (autonome Entwicklungsteams)",
        "Die Verbesserungsperspektive (Verantwortung für den Prozess übernehmen)",
        "Die Managementperspektive (Kontrolle und Reporting)",
        "Die Kundenperspektive (Feedback zum Produkt)"
      ],
      "loesung": 2,
      "erklaerung": "Die Verbesserungsperspektive beleuchtet, wie die Zusammenarbeit und die Prozesse verbessert werden. Die Sprint-Retrospektive ist das zentrale Event zur Prozessverbesserung, und die Arbeit des Scrum Masters, Hindernisse zu beseitigen, trägt direkt dazu bei, den Prozess effektiver zu machen.",
      "gewichtung": 2,
      "thema": "Scrum-Grundlagen",
      "extended_explanation": {
        "titel": "Die drei Säulen des Scrum-Verständnisses",
        "schritte": [
          "Scrum lässt sich aus drei Perspektiven betrachten, die zusammenwirken:",
          "**Produktperspektive:** Fokus auf 'das richtige Ding bauen'. Gesteuert vom Product Owner über das Product Backlog und den Sprint-Review.",
          "**Entwicklungsperspektive:** Fokus auf 'das Ding richtig bauen'. Getragen vom autonomen Entwicklungsteam im Sprint.",
          "**Verbesserungsperspektive:** Fokus auf 'besser darin werden, die Dinge richtig zu bauen'. Angetrieben durch den Scrum Master, die Retrospektive und das Daily Scrum.",
          "Ein erfolgreiches Scrum-Team balanciert alle drei Perspektiven aus."
        ]
      },
      "mini_glossary": {
        "Produktperspektive": "Die Sichtweise in Scrum, die sich darauf konzentriert, wie Produkte durch den Fokus auf den Geschäftswert definiert und verbessert werden.",
        "Entwicklungsperspektive": "Die Sichtweise in Scrum, die beleuchtet, wie autonome Teams Produkte entwickeln.",
        "Verbesserungsperspektive": "Die Sichtweise in Scrum, die sich darauf konzentriert, wie Zusammenarbeit und Prozesse verbessert werden, indem das Team Verantwortung übernimmt."
      }
    },
    {
      "frage": "22. Einem Scrum-Team, das eine neue Logistik-Software einführt, wird vom Abteilungsleiter eine zusätzliche, dringende Aufgabe während des laufenden Sprints zugewiesen. Welche Reaktion des Scrum Masters und des Teams wäre am ehesten Scrum-konform?",
      "optionen": [
        "Das Team nimmt die Aufgabe sofort auf und arbeitet am Wochenende, um das Sprint-Ziel trotzdem zu erreichen.",
        "Der Scrum Master lehnt die Aufgabe kategorisch ab, da der Sprint-Plan unantastbar ist.",
        "Der Scrum Master schützt das Team vor der unerwünschten Einflussnahme und verweist den Abteilungsleiter an den Product Owner, um die neue Anforderung für einen der nächsten Sprints zu priorisieren.",
        "Der Product Owner bricht den aktuellen Sprint sofort ab und startet einen neuen Sprint mit der zusätzlichen Aufgabe.",
        "Das Team stimmt darüber ab, welche der ursprünglich geplanten Aufgaben im Gegenzug aus dem Sprint entfernt wird."
      ],
      "loesung": 2,
      "erklaerung": "Eine der Aufgaben des Scrum Masters ist es, das Team vor unerwünschten Einflüssen von außen zu schützen. Der korrekte Weg für neue Anforderungen ist immer über den Product Owner und das Product Backlog. Nur der Product Owner kann entscheiden, die Prioritäten zu ändern. Ein Sprint wird nur in seltenen Ausnahmefällen vom Product Owner abgebrochen, wenn das Sprint-Ziel obsolet wird.",
      "gewichtung": 3,
      "thema": "Scrum-Prozess",
      "extended_explanation": {
        "titel": "Schutz des Sprints und Stabilität",
        "schritte": [
          "Der Sprint ist ein geschützter Zeitraum, der dem Entwicklungsteam Fokus und eine stabile Arbeitsumgebung ermöglichen soll. Ständige Unterbrechungen und neue Aufgaben während des Sprints zerstören den Rhythmus und die Planbarkeit.",
          "Indem der Scrum Master diese Störungen abfängt und auf den richtigen Prozess (via Product Owner) verweist, stellt er die Einhaltung der Scrum-Regeln sicher und ermöglicht dem Team, seine Zusagen (den Forecast) zu erfüllen.",
          "Wenn die neue Aufgabe extrem wichtig ist, muss der Product Owner eine strategische Entscheidung treffen: Ist sie so wichtig, dass das aktuelle Sprint-Ziel wertlos wird und ein Abbruch gerechtfertigt ist? Meistens ist die Antwort 'Nein', und die Anforderung wird für den nächsten Sprint eingeplant."
        ]
      },
      "mini_glossary": {
        "Sprint-Ziel": "Ein übergeordnetes Ziel für den Sprint, das durch die Implementierung des Sprint Backlogs erreicht werden soll. Es gibt dem Team einen roten Faden und Flexibilität bei der Umsetzung.",
        "Fokus": "Einer der fünf Scrum-Werte. Indem man sich auf nur wenige Dinge auf einmal konzentriert, arbeitet das Team effektiver und liefert bessere Ergebnisse.",
        "Sprint-Abbruch": "Eine Entscheidung des Product Owners, einen Sprint vorzeitig zu beenden. Dies ist ein sehr seltenes Ereignis und geschieht nur, wenn das Sprint-Ziel obsolet wird."
      }
    },
    {
      "frage": "23. Ein Unternehmen will Scrum einführen. Der CEO glaubt, der Leitsatz 'Vertrauen ist gut, Kontrolle ist besser' sei der Schlüssel zum Erfolg. Warum stellt diese Haltung eine fundamentale Herausforderung für die agile Transformation dar?",
      "optionen": [
        "Weil Scrum keine Kontrolle vorsieht und auf reines Chaos setzt.",
        "Weil diese Haltung im Widerspruch zum agilen Prinzip steht, Projekte um motivierte Individuen zu errichten und ihnen zu vertrauen, dass sie die Aufgabe erledigen.",
        "Weil in Scrum nur der Product Owner kontrollieren darf, nicht aber der CEO.",
        "Weil Kontrolle in Scrum ausschließlich durch automatisierte Tests erfolgt.",
        "Weil diese Haltung nur in IT-Projekten problematisch ist, nicht aber in BWL-Projekten."
      ],
      "loesung": 1,
      "erklaerung": "Agile Methoden wie Scrum basieren auf einem Menschenbild, das von Vertrauen und Eigenverantwortung geprägt ist. Ein Kernprinzip des Agilen Manifests lautet: 'Errichte Projekte rund um motivierte Individuen. Gib ihnen das Umfeld und die Unterstützung, die sie benötigen, und vertraue darauf, dass sie die Aufgabe erledigen.' Eine auf Misstrauen und Mikromanagement basierende Kontrollkultur untergräbt die Selbstorganisation und Motivation des Teams, die für den Erfolg von Scrum essenziell sind.",
      "gewichtung": 3,
      "thema": "Agile Prinzipien",
      "extended_explanation": {
        "titel": "Paradigmenwechsel: Von Kontrolle zu 'Empowerment'",
        "schritte": [
          "Klassisches Management basiert oft auf Anweisung und Kontrolle ('Command and Control').",
          "Agile Führung basiert auf 'Empowerment': Das Management setzt die Ziele (die Vision), stellt die Ressourcen bereit und vertraut dann dem Team, den besten Weg zur Zielerreichung zu finden. Kontrolle wird durch Transparenz (z.B. sichtbare Taskboards, Sprint-Reviews) ersetzt.",
          "Die Einführung von Scrum ist daher oft weniger eine Prozessänderung als vielmehr eine Kulturänderung. Der Glaubenssatz 'Vertrauen ist gut, Kontrolle ist besser' muss sich zu 'Vertrauen, aber verifizieren durch Transparenz' wandeln."
        ]
      },
      "mini_glossary": {
        "Empowerment": "Die Übertragung von Verantwortung und Entscheidungsbefugnis an Mitarbeiter oder Teams, um deren Autonomie und Motivation zu steigern.",
        "Mikromanagement": "Ein Führungsstil, bei dem eine Führungskraft die Arbeit ihrer Untergebenen übermäßig detailliert beobachtet oder kontrolliert.",
        "Wertesystem": "Die Gesamtheit der Überzeugungen und Glaubenssätze, die das Verhalten einer Person oder Organisation prägen. Die Einführung von Scrum erfordert oft eine Änderung des Wertesystems."
      }
    },
    {
      "frage": "24. Welche Aussage über die Time-box von Scrum-Meetings ist laut Scrum Guide korrekt?",
      "optionen": [
        "Das Daily Scrum hat eine feste Time-box von 15 Minuten, unabhängig von der Sprint-Länge.",
        "Das Sprint Planning für einen zweiwöchigen Sprint dauert immer genau 8 Stunden.",
        "Die Sprint-Retrospektive kann bei Bedarf auf über 4 Stunden ausgedehnt werden.",
        "Der Sprint-Review hat keine feste Time-box und dauert so lange, wie die Stakeholder Fragen haben.",
        "Alle Meetings sind optional und können vom Team übersprungen werden."
      ],
      "loesung": 0,
      "erklaerung": "Das Daily Scrum ist das einzige Event, dessen Time-box von 15 Minuten unabhängig von der Sprint-Länge ist. Alle anderen Events (Planning, Review, Retrospective) skalieren proportional zur Sprint-Länge, z.B. hat das Sprint Planning für einen einmonatigen Sprint eine Time-box von maximal 8 Stunden.",
      "gewichtung": 3,
      "thema": "Scrum-Meetings",
      "extended_explanation": {
        "titel": "Time-boxing als Effizienz-Treiber",
        "schritte": [
          "Jedes Event in Scrum hat eine maximale Dauer (eine 'Time-box'). Dies dient dazu, Verschwendung zu vermeiden und die Effizienz zu steigern.",
          "Die Time-box zwingt die Teilnehmer, sich auf das Wesentliche zu konzentrieren und produktiv zu sein. Anstatt endloser Diskussionen wird auf den Punkt kommuniziert.",
          "Es handelt sich um eine Obergrenze. Wenn das Ziel des Meetings früher erreicht wird, kann das Meeting auch früher beendet werden. Dies respektiert die Zeit aller Teilnehmer."
        ]
      },
      "mini_glossary": {
        "Time-box": "Eine feste, maximale Zeitdauer für ein Event. Alle Scrum-Events sind time-boxed.",
        "Sprint Planning": "Meeting zum Start eines Sprints, um den Sprint zu planen. Time-box: max. 8 Stunden für einen einmonatigen Sprint.",
        "Sprint-Retrospektive": "Meeting am Ende eines Sprints zur Prozessverbesserung. Time-box: max. 3 Stunden für einen einmonatigen Sprint."
      }
    },
    {
      "frage": "25. Der Grundsatz 'Einfachheit – die Kunst, die Menge nicht getaner Arbeit zu maximieren' ist ein agiles Prinzip. Wie kann ein Product Owner in einem Projekt zur Entwicklung einer neuen Vertriebs-App dieses Prinzip am besten anwenden?",
      "optionen": [
        "Indem er möglichst viele Features in das Product Backlog aufnimmt, um alle denkbaren Optionen zu haben.",
        "Indem er das Team anweist, den Code so einfach wie möglich zu halten, auch auf Kosten der Funktionalität.",
        "Indem er sich konsequent auf die Features konzentriert, die den höchsten Kundennutzen liefern, und bewusst auf 'Nice-to-have'-Funktionen verzichtet.",
        "Indem er die Anzahl der Teammitglieder so klein wie möglich hält.",
        "Indem er die Dokumentation auf ein absolutes Minimum reduziert, auch wenn sie gesetzlich vorgeschrieben ist."
      ],
      "loesung": 2,
      "erklaerung": "Dieses Prinzip zielt darauf ab, Verschwendung zu vermeiden, indem man sich auf das Wesentliche konzentriert. Für einen Product Owner bedeutet das, aktiv zu entscheiden, was **nicht** getan wird. Statt eine App mit unzähligen Funktionen zu überladen, die kaum jemand nutzt, fokussiert er sich auf die 20% der Features, die 80% des Wertes liefern (Pareto-Prinzip). Er maximiert die Menge an Arbeit, die man sich sparen kann, ohne den Wert zu schmälern.",
      "gewichtung": 3,
      "thema": "Agile Prinzipien",
      "extended_explanation": {
        "titel": "Weniger ist mehr: Der Fokus auf Wertschöpfung",
        "schritte": [
          "In vielen Projekten werden Features entwickelt, die später kaum oder gar nicht genutzt werden. Dies ist eine enorme Verschwendung von Zeit und Geld.",
          "Der agile Ansatz, insbesondere dieses Prinzip, bekämpft diese Verschwendung. Durch kurze Feedbackzyklen (Sprints) und die Priorisierung nach Wert lernt der Product Owner schnell, was die Kunden wirklich wollen.",
          "Für die Vertriebs-App bedeutet das, vielleicht zuerst nur die Kernfunktionen 'Kundendaten anzeigen' und 'Besuchsbericht erfassen' perfekt umzusetzen, anstatt von Anfang an eine komplexe Routenplanung zu integrieren, deren Nutzen noch unklar ist."
        ]
      },
      "mini_glossary": {
        "Einfachheit": "Ein agiles Prinzip, das darauf abzielt, die Menge an unnötiger Arbeit zu maximieren, die nicht getan wird.",
        "Pareto-Prinzip (80/20-Regel)": "Eine Regel, die besagt, dass in vielen Fällen 80% der Auswirkungen auf 20% der Ursachen zurückzuführen sind. In der Produktentwicklung bedeutet dies oft, dass 20% der Funktionen 80% des Nutzens bringen.",
        "Verschwendung (Waste)": "Ein Konzept aus dem Lean Management, das alle Aktivitäten beschreibt, die Ressourcen verbrauchen, aber keinen Wert für den Kunden schaffen."
      }
    },
    {
      "frage": "26. In einem Unternehmen wird Scrum eingeführt. Ein Projektmanager aus einem klassischen Projekt möchte wissen, wer im Scrum-Team für die Erstellung des Projektplans, die Budgetkontrolle und die Berichterstattung an das Management zuständig ist. Wie lautet die korrekte Antwort?",
      "optionen": [
        "Der Scrum Master übernimmt all diese Aufgaben, er ist der neue Projektmanager.",
        "Der Product Owner ist für all diese Aufgaben allein verantwortlich.",
        "Diese Aufgaben sind im Scrum Framework nicht einer einzigen Rolle zugeordnet, sondern werden aufgeteilt oder verändern sich: Der PO managt den Wert (ROI), das Team den Umsetzungsplan (Sprint Backlog) und Transparenz entsteht durch die Artefakte.",
        "Das Entwicklungsteam ist kollektiv für das Budget und die Berichterstattung verantwortlich.",
        "Es gibt eine zusätzliche Rolle, den 'Scrum Project Manager', der diese Aufgaben übernimmt."
      ],
      "loesung": 2,
      "erklaerung": "Scrum kennt die Rolle des klassischen Projektmanagers nicht. Die Verantwortlichkeiten werden auf die drei Scrum-Rollen aufgeteilt. Der Product Owner ist für die Wertmaximierung und das Stakeholder-Management zuständig, was Budgetaspekte und die Kommunikation des Fortschritts (z.B. über Release-Pläne) einschließt. Das Entwicklungsteam plant die konkrete Arbeit im Sprint. Der Scrum Master sorgt für den funktionierenden Prozess. Es ist eine grundlegende Neuverteilung der Verantwortung.",
      "gewichtung": 3,
      "thema": "Scrum-Rollen",
      "extended_explanation": {
        "titel": "Auflösung der klassischen Projektmanager-Rolle",
        "schritte": [
          "Die Frage nach dem 'Projektmanager' ist eine der häufigsten bei der Scrum-Einführung und deckt ein zentrales Missverständnis auf.",
          "Scrum ersetzt die zentrale Steuerungsinstanz des Projektmanagers durch ein System aus sich selbst organisierenden Einheiten mit klaren Verantwortungsbereichen.",
          "**Planung:** Der PO plant das 'Was' (Product Backlog), das Team plant das 'Wie' (Sprint Backlog).",
          "**Kontrolle/Reporting:** Diese erfolgt nicht durch Berichte, sondern durch Transparenz. Im Sprint-Review sehen die Stakeholder das Ergebnis direkt. Das Burndown/Burnup-Chart zeigt den Fortschritt.",
          "**Budget:** Der PO verantwortet den ROI und steuert die Investition durch die Priorisierung des Backlogs."
        ]
      },
      "mini_glossary": {
        "Projektmanager": "Eine Rolle im klassischen Projektmanagement, die für die Planung, Durchführung und den Abschluss von Projekten verantwortlich ist. Diese Rolle existiert in Scrum nicht.",
        "Return on Investment (ROI)": "Eine betriebswirtschaftliche Kennzahl, die das Verhältnis zwischen dem investierten Kapital und dem erzielten Gewinn misst. Der PO versucht den ROI zu maximieren.",
        "Transparenz": "Einer der drei Pfeiler von Scrum, der sicherstellt, dass alle relevanten Informationen für alle Beteiligten leicht zugänglich und verständlich sind."
      }
    },
    {
      "frage": "27. Welchen Zweck hat die `Definition of Done` (DoD) in einem Scrum-Projekt?",
      "optionen": [
        "Sie definiert, wann ein Sprint offiziell gestartet werden kann.",
        "Sie ist eine Checkliste, die der Product Owner verwendet, um die Arbeit des Teams zu kontrollieren.",
        "Sie ist ein vom gesamten Scrum-Team geteiltes Verständnis darüber, wann ein Produktinkrement als vollständig und potenziell auslieferbar gilt.",
        "Sie beschreibt die Aufgaben, die ein Teammitglied an einem Tag erledigen muss.",
        "Sie legt die Kriterien fest, wann eine User Story bereit ist, in das Sprint Planning aufgenommen zu werden."
      ],
      "loesung": 2,
      "erklaerung": "Die Definition of Done ist ein entscheidendes Element zur Qualitätssicherung und Transparenz. Es ist eine gemeinsame Vereinbarung des Scrum-Teams, welche Kriterien erfüllt sein müssen, damit ein Product-Backlog-Eintrag als 'Done' gilt. Dies stellt sicher, dass das, was am Ende des Sprints geliefert wird, eine einheitliche Qualität hat und wirklich fertig ist.",
      "gewichtung": 2,
      "thema": "Scrum-Artefakte",
      "extended_explanation": {
        "titel": "Qualitätssicherung und Vermeidung von 'Undone Work'",
        "schritte": [
          "Ohne eine klare DoD könnte ein Entwickler sagen 'Ich bin fertig', obwohl die Arbeit nicht getestet, dokumentiert oder integriert ist. Dies führt zu sogenannter 'Undone Work' (unerledigter Arbeit), die sich ansammelt und später zu Problemen führt.",
          "Die DoD macht explizit, was 'fertig' bedeutet. Für ein BWL-Team, das eine Marktanalyse erstellt, könnte die DoD lauten: 'Daten erhoben, Analyse geschrieben, von einem zweiten Teammitglied gegengelesen, Kernaussagen in einer Management-Summary zusammengefasst.'",
          "Nur was die DoD erfüllt, darf im Sprint-Review gezeigt werden."
        ]
      },
      "mini_glossary": {
        "Definition of Done (DoD)": "Eine formale Beschreibung des Zustands des Inkrements, wenn es die für das Produkt erforderlichen Qualitätsmaßnahmen erfüllt.",
        "Qualitätssicherung": "Ein prozessorientierter Ansatz zur Sicherstellung, dass ein Produkt oder eine Dienstleistung die geforderten Qualitätsstandards erfüllt.",
        "Undone Work": "Arbeit, die erledigt werden muss, um einen Product-Backlog-Eintrag wirklich 'Done' zu machen, aber nicht im ursprünglichen Sprint abgeschlossen wurde. Sie stellt eine Form von technischen Schulden dar."
      }
    },
    {
      "frage": "28. Warum ist es wichtig, dass das Entwicklungsteam das Product Backlog schätzt und nicht der Product Owner oder der Scrum Master?",
      "optionen": [
        "Weil Schätzen eine unwichtige Aufgabe ist, die an das Team delegiert werden kann.",
        "Weil nur diejenigen, die die Arbeit ausführen, eine realistische Einschätzung über den damit verbundenen Aufwand abgeben können.",
        "Weil der Product Owner befangen wäre und die Aufwände zu niedrig ansetzen würde, um mehr in einen Sprint zu bekommen.",
        "Weil der Scrum Master keine fachliche Expertise haben muss und es daher nicht kann.",
        "Weil die Schätzungen als Grundlage für die Leistungsbeurteilung der einzelnen Entwickler dienen."
      ],
      "loesung": 1,
      "erklaerung": "Das Schätzen des Aufwands von Product-Backlog-Einträgen ist die alleinige Verantwortung des Entwicklungsteams. Der Grund dafür ist einfach: Nur die Personen, die die Arbeit tatsächlich umsetzen, verfügen über das notwendige Wissen und die Erfahrung, um den Aufwand verlässlich einzuschätzen. Jede Schätzung von außen wäre eine reine Vermutung und würde die Selbstorganisation des Teams untergraben.",
      "gewichtung": 2,
      "thema": "Scrum-Prozess",
      "extended_explanation": {
        "titel": "Wer die Arbeit macht, schätzt die Arbeit",
        "schritte": [
          "Dieses Prinzip ist fundamental für den Respekt und das Vertrauen gegenüber dem Entwicklungsteam.",
          "Schätzungen in Scrum dienen nicht der Kontrolle, sondern der Planung und Vorhersage. Das Team nutzt sie, um im Sprint Planning zu entscheiden, wie viel Arbeit es realistisch übernehmen kann.",
          "Eine gängige Technik ist das 'Planning Poker', bei dem das gesamte Team gemeinsam schätzt. Dies fördert die Diskussion über die Aufgaben und führt zu einem besseren gemeinsamen Verständnis und genaueren Schätzungen, als wenn es nur eine Person tun würde."
        ]
      },
      "mini_glossary": {
        "Schätzung (Estimation)": "Der Prozess der Vorhersage des Aufwands, der für die Durchführung einer Arbeit erforderlich ist. In Scrum ist dies Aufgabe des Entwicklungsteams.",
        "Planning Poker": "Eine konsensbasierte Schätztechnik, die verwendet wird, um Aufwände für Product-Backlog-Einträge zu schätzen.",
        "Story Points": "Eine relative Maßeinheit in Scrum, die verwendet wird, um den Gesamtaufwand für die Implementierung eines Product-Backlog-Eintrags auszudrücken. Sie berücksichtigt Komplexität, Unsicherheit und Arbeitsmenge."
      }
    },
    {
      "frage": "29. Ein Team stellt am Ende des Sprints im Sprint-Review ein Produktinkrement vor. Die Stakeholder sind jedoch unzufrieden und geben negatives Feedback. Wer ist in Scrum letztendlich für den Erfolg des Produkts und damit auch für diese Situation verantwortlich?",
      "optionen": [
        "Das Entwicklungsteam, weil es das Produktinkrement nicht nach den Wünschen der Stakeholder umgesetzt hat.",
        "Der Scrum Master, weil er den Prozess nicht richtig moderiert hat.",
        "Die Stakeholder, weil sie ihre Anforderungen nicht klar genug kommuniziert haben.",
        "Der Product Owner, da er für die Maximierung des Produktwerts und die Verwaltung des Product Backlogs verantwortlich ist.",
        "Niemand, da in Scrum der Prozess wichtiger ist als das Ergebnis."
      ],
      "loesung": 3,
      "erklaerung": "Der Product Owner ist die eine Person, die für den Produkterfolg verantwortlich ist ('one throat to choke'). Dazu gehört es, die Bedürfnisse der Stakeholder zu verstehen, diese im Product Backlog abzubilden und so zu priorisieren, dass das Entwicklungsteam an den wertvollsten Dingen arbeitet. Wenn das Ergebnis nicht den Erwartungen entspricht, ist dies ein Indikator dafür, dass die Arbeit des Product Owners (Anforderungsmanagement, Priorisierung, Kommunikation) verbessert werden muss.",
      "gewichtung": 2,
      "thema": "Scrum-Rollen",
      "extended_explanation": {
        "titel": "Verantwortung und Lernchance",
        "schritte": [
          "Diese Situation sollte nicht als Scheitern, sondern als wertvolle Lernchance gesehen werden. Agilität bedeutet, durch schnelles Feedback frühzeitig zu erkennen, wenn man auf dem falschen Weg ist.",
          "Anstatt Schuld zuzuweisen, analysiert das Scrum-Team die Situation. Der Product Owner muss sein Verständnis der Stakeholder-Bedürfnisse schärfen und sicherstellen, dass die Product-Backlog-Einträge dieses Verständnis widerspiegeln.",
          "Das Team hat nun die Möglichkeit, im nächsten Sprint zu korrigieren, anstatt monatelang in die falsche Richtung zu entwickeln. Der 'Schaden' ist auf die Dauer eines Sprints begrenzt."
        ]
      },
      "mini_glossary": {
        "Produkterfolg": "Das Erreichen der Geschäftsziele, die mit einem Produkt verbunden sind. Die Verantwortung hierfür liegt beim Product Owner.",
        "Stakeholder-Management": "Der Prozess der Verwaltung der Erwartungen und Anforderungen von Personen, die ein Interesse am Projekt haben. Eine Kernaufgabe des Product Owners.",
        "Wertmaximierung": "Die Hauptaufgabe des Product Owners, die darin besteht, die Arbeit des Entwicklungsteams so zu steuern, dass der größtmögliche Geschäftswert entsteht."
      }
    },
    {
      "frage": "30. Ein Unternehmen hat ein sehr erfolgreiches Scrum-Team. Das Management beschließt nun, die Vorgehensweise dieses Teams (Meetings, Artefakte, Teamregeln) exakt zu kopieren und als unternehmensweiten Standard für alle anderen Teams vorzuschreiben. Warum widerspricht dieses Vorgehen dem agilen Prinzip 'Inspect and Adapt'?",
      "optionen": [
        "Weil jedes Team seine eigenen, einzigartigen Prozesse entwickeln sollte, auch wenn sie weniger effizient sind.",
        "Weil agile Prozesse nicht dokumentiert werden dürfen.",
        "Weil Scrum nach fünf Sprints immer noch genauso praktiziert werden sollte, wie es am Anfang war, um Konsistenz zu wahren.",
        "Weil der Erfolg eines Teams vom spezifischen Kontext (Produkt, Teammitglieder, Herausforderungen) abhängt und eine blinde Kopie des Prozesses die Fähigkeit anderer Teams zur Selbstverbesserung und Anpassung an ihren eigenen Kontext verhindert.",
        "Weil nur zertifizierte Scrum Master Prozesse für andere Teams definieren dürfen."
      ],
      "loesung": 3,
      "erklaerung": "Das Prinzip von 'Inspect and Adapt' (Überprüfen und Anpassen) ist das Herzstück von Scrum. Jedes Team soll in der Retrospektive seinen eigenen Prozess reflektieren und an seine spezifischen Bedürfnisse anpassen. Ein Vorgehen 'One size fits all', bei dem ein Prozess von außen übergestülpt wird, zerstört diese Selbstorganisation und den kontinuierlichen Verbesserungsprozess. Was für ein Team funktioniert, kann für ein anderes Team in einem anderen Kontext völlig unpassend sein.",
      "gewichtung": 3,
      "thema": "Agile Prinzipien",
      "extended_explanation": {
        "titel": "Kontext ist König: Gegen die Dogmatisierung von Prozessen",
        "schritte": [
          "Scrum ist bewusst ein leichtgewichtiges Framework und kein detaillierter, vorschreibender Prozess. Es gibt den Rahmen vor, innerhalb dessen sich das Team seinen eigenen, passenden Prozess baut.",
          "Ein Team, das an einer hochinnovativen Markteintrittsstrategie arbeitet, hat andere Bedürfnisse als ein Team, das einen bestehenden internen HR-Prozess optimiert.",
          "Anstatt Prozesse zu kopieren, sollte das Management eine Kultur der kontinuierlichen Verbesserung fördern, in der Teams ermutigt werden, voneinander zu lernen, aber letztendlich selbst die Verantwortung für ihre Arbeitsweise übernehmen."
        ]
      },
      "mini_glossary": {
        "Inspect and Adapt": "Ein empirischer Prozess, der auf Transparenz, Überprüfung und Anpassung basiert. Scrum selbst ist ein solcher Prozess, und es erwartet von den Teams, dass sie ihn auf ihre eigene Arbeit anwenden.",
        "Selbstorganisation": "Das Prinzip, dass die Personen, die der Arbeit am nächsten sind, am besten entscheiden können, wie diese erledigt werden soll. Ein Grundpfeiler von Scrum.",
        "Framework": "Ein Rahmengerüst, das eine Grundstruktur vorgibt, aber bewusst unvollständig ist und mit spezifischen Praktiken und Prozessen gefüllt werden muss. Scrum ist ein Framework, keine Methodologie."
      }
    }
  ]
}
